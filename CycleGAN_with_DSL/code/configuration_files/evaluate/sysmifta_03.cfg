[general]
    base_patch_size     = 1024
    lod	                = 1
    datapath            = /home/nisar/phd/data/Nephrectomies/
    staincode           = 03

    regexBaseName       = (x)_(x)_(patient$$4)_(stain)
    #Biopsy
    #trainPatients       = 2,3,4,5,6,7,8,10,11,13,14,15,17,18,19,20,21,23,24,25,26,27,28,29,30,32,33,35,37,39,40,41,44,46,50,51,52,56,59,61,63,64,65,66,67,68,74,75,79,80,81,82,83,84,85,86,87,88,92,93,94,97,98,102,104,105,107,109,110
    #validationPatients  =
    #testPatients        = 1,9,16,22,31,36,48,49,57,58,60,70,72,76,99,100,101,103,106,108
    #Nephrectomy
    trainPatients       = 11,12,14,15
    validationPatients  = 10,13
    testPatients        = 16,17,18,19

    colourPatients      =
    colourPatches       =

[extraction]
    cytominehost        = cytomine.icube.unistra.fr

    #Nephrectomy
    #projectId          = 1381
    #Biopsy
    projectId           = 14575464
    # Cytomine ID, or -1 if not to be extracted from Cytomine
    objectIds           = 250358,15235247,1895744,-1
    objectLabels        = healthy,sclerotic,dead,background

    extractbasepath     = ${general:datapath}${general:staincode}/
    imagepath           = ${extraction:extractbasepath}images
    maskpath            = ${extraction:extractbasepath}masks
    groundtruthpath     = ${extraction:extractbasepath}groundtruths
    patchpath           = ${extraction:extractbasepath}patches

    [classmerges]
        glomeruli       = healthy,sclerotic,dead

    # One of the below must include a 'negative' class, which will be given label 0

    [relativeclassnumbers]
        # Number of patches, -1 means extract all
        negative            = 7glomeruli
        background          = 0.08glomeruli

    [absoluteclassnumbers]
        # Number of patches, -1 means extract all
        glomeruli           = -1

    [extractionmethods]
        # This also defines the class labels, negative is always class 0 and the remaining are in the order listed below
        # It is recommended to use the name 'background' for the area outside the sample tissue (if specifically defined)
        # as these patches are excluded from stain augmentations during training using this name. If changed, please also
        # change in train_unet 'augmentationclassblock'
        negative            = random
        background          = random
        glomeruli           = centred

[normalisation]
    standardise_patches     = True
    normalise_patches       = True
    normalise_image         = False
    normalise_within_tissue = False

[augmentation]
    use_augmentation           = True
    live_augmentation          = True
    # Not valid for live_augmentation
    multiplyexamples           = True
    # Not valid for live_augmentation
    multiplyfactor             = 5
    # Not valid for live_augmentation
    balanceclasses             = False
    patchpath                  = ${extraction:extractbasepath}augmentedpatches
    # 'affine', 'elastic', 'stain', 'noise', 'enhance', 'blur'
    methods                    = affine,elastic,noise,enhance,blur,stain
    affine_rotation_range      = 180
    affine_width_shift_range   = 0.2
    affine_height_shift_range  = 0.2
    affine_rescale             = 1.
    affine_zoom_range          = 0.2
    affine_horizontal_flip     = True
    affine_vertical_flip       = True
    elastic_sigma              = 10
    elastic_alpha              = 100
    smotenneighbours           = 5
    blur_sigma_range           = 0,1
    stain_alpha_range          = 0.25
    stain_beta_range           = 0.05
    noise_sigma_range          = 0,0.01
    bright_factor_range        = 0.9,1.1
    contrast_factor_range      = 0.9,1.1
    colour_factor_range        = 0.9,1.1

[trainingstrategy]
    # 'rgb', 'Greyscale', 'Haematoxylin', 'ChannelSwap', 'ColourTransfer', 'LearnColour'
    strategy        = rgb
    # If strategy = ColourTransfer
    targetstainings =

[detector]
    inputpath            = ${extraction:extractbasepath}downsampledpatches
    modelpath            = /home/nisar/phd/saved_models/UNet/SSL/unet/percentN_equally_randomly/percent_100/02/simple_02_rgb
    outputpath           = ${detector:modelpath}
    lod                  = 1
    validation_fraction  = 0.2
    network_depth        = 5
    filter_factor_offset = 0
    kernel_size          = 3
    # 'valid', 'same'
    padding              = valid
    batch_size           = 8
    epochs               = 250
    earlyStopping        = False
    reducelr             = False
    learn_rate           = 0.0001
    # off, before, after
    batchnormalisation   = off
    learnupscale         = True
    dropout              = False
    weight_samples       = False
    weightinit           = glorot_normal
    modifiedarch         = False

[segmentation]
    segmentationpath    = segmentations
    detectionpath       = detections
    # Stride value in pixels, preceded by 'a' if absolute, or 'r' if relative to patch size, i.e.
    #     a16 = stride of 16 pixels
    #     r1 = stride of patch size
    #     r0.25 = stride of 1/4 patch size
    stride              = r1
    batch_size          = 512
    stain_transfer      = True